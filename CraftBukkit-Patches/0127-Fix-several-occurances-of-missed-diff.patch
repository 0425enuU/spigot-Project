From b8d94673c41ba8e0cb34b3f1976c9c534f01c083 Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Sat, 12 Apr 2014 17:49:14 +1000
Subject: [PATCH] Fix several occurances of missed diff.


diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorFireball.java b/src/main/java/net/minecraft/server/DispenseBehaviorFireball.java
index d16f035..9fe2a8b 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorFireball.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorFireball.java
@@ -15,7 +15,7 @@ final class DispenseBehaviorFireball extends DispenseBehaviorItem {
         EnumFacing enumfacing = BlockDispenser.b(isourceblock.h());
         IPosition iposition = BlockDispenser.a(isourceblock);
         double d0 = iposition.getX() + (double) ((float) enumfacing.getAdjacentX() * 0.3F);
-        double d1 = iposition.getY() + (double) ((float) enumfacing.getAdjacentY() * 0.3F);
+        double d1 = iposition.getY() + (double) ((float) enumfacing.getAdjacentX() * 0.3F);
         double d2 = iposition.getZ() + (double) ((float) enumfacing.getAdjacentZ() * 0.3F);
         World world = isourceblock.k();
         Random random = world.random;
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 0df3b6b..cc0776f 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -147,7 +147,7 @@ public class EntityBoat extends Entity {
         return !this.dead;
     }
 
-        public void h() {
+    public void h() {
         // CraftBukkit start
         double prevX = this.locX;
         double prevY = this.locY;
diff --git a/src/main/java/net/minecraft/server/EntityEnderDragon.java b/src/main/java/net/minecraft/server/EntityEnderDragon.java
index 9a8408c..64b0992 100644
--- a/src/main/java/net/minecraft/server/EntityEnderDragon.java
+++ b/src/main/java/net/minecraft/server/EntityEnderDragon.java
@@ -135,7 +135,7 @@ public class EntityEnderDragon extends EntityInsentient implements IComplex, IMo
                     d2 = this.locZ + (this.bj - this.locZ) / (double) this.bg;
                     d3 = MathHelper.g(this.bk - (double) this.yaw);
                     this.yaw = (float) ((double) this.yaw + d3 / (double) this.bg);
-                    this.pitch = (float) ((double) this.pitch + (this.bm - (double) this.pitch) / (double) this.bg);
+                    this.pitch = (float) ((double) this.pitch + (this.bl - (double) this.pitch) / (double) this.bg);
                     --this.bg;
                     this.setPosition(d0, d1, d2);
                     this.b(this.yaw, this.pitch);
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index bc55fcc..922b576 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -78,7 +78,7 @@ public abstract class EntityHuman extends EntityLiving implements ICommandListen
         ChunkCoordinates chunkcoordinates = world.getSpawn();
 
         this.setPositionRotation((double) chunkcoordinates.x + 0.5D, (double) (chunkcoordinates.y + 1), (double) chunkcoordinates.z + 0.5D, 0.0F, 0.0F);
-        this.az = 180.0F;
+        this.aZ = 180.0F;
         this.maxFireTicks = 20;
     }
 
@@ -190,7 +190,7 @@ public abstract class EntityHuman extends EntityLiving implements ICommandListen
         }
 
         if (d0 < -d3) {
-            this.bu = this.by = this.locX;
+            this.bu = this.bx = this.locX;
         }
 
         if (d2 < -d3) {
@@ -198,7 +198,7 @@ public abstract class EntityHuman extends EntityLiving implements ICommandListen
         }
 
         if (d1 < -d3) {
-            this.bv = this.bz = this.locY;
+            this.bv = this.by = this.locY;
         }
 
         this.bx += d0 * 0.25D;
diff --git a/src/main/java/net/minecraft/server/EntityItem.java b/src/main/java/net/minecraft/server/EntityItem.java
index 0f1bcc7..5eb893f 100644
--- a/src/main/java/net/minecraft/server/EntityItem.java
+++ b/src/main/java/net/minecraft/server/EntityItem.java
@@ -320,7 +320,7 @@ public class EntityItem extends Entity {
     public ItemStack getItemStack() {
         ItemStack itemstack = this.getDataWatcher().getItemStack(10);
 
-        return itemstack == null ? new ItemStack(Blocks.STONE) : itemstack; 
+        return itemstack == null ? new ItemStack(Blocks.STONE) : itemstack;
     }
 
     public void setItemStack(ItemStack itemstack) {
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index f565028..166206c 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -199,7 +199,7 @@ public abstract class EntityMinecartAbstract extends Entity {
         }
 
         if (this.locY < -64.0D) {
-            this.G();
+            this.F();
         }
 
         int i;
diff --git a/src/main/java/net/minecraft/server/EntitySlime.java b/src/main/java/net/minecraft/server/EntitySlime.java
index c05d86c..f737dd8 100644
--- a/src/main/java/net/minecraft/server/EntitySlime.java
+++ b/src/main/java/net/minecraft/server/EntitySlime.java
@@ -146,7 +146,7 @@ public class EntitySlime extends EntityInsentient implements IMonster {
         } else {
             this.bc = false;
             if (this.onGround) {
-                this.bd = this.bf = 0.0F;
+                this.bd = this.be = 0.0F;
             }
         }
     }
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 6f30e6d..fd6e057 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -354,7 +354,7 @@ public class PlayerConnection implements PacketPlayInListener {
                 }
 
                 this.player.i();
-                this.player.W = 0.0F;
+                this.player.V = 0.0F;
                 this.player.setLocation(this.y, this.z, this.q, f2, f3);
                 if (!this.checkMovement) {
                     return;
@@ -1740,7 +1740,7 @@ public class PlayerConnection implements PacketPlayInListener {
                     }
 
                     if (itemstack.getItem() == Items.WRITTEN_BOOK && itemstack1.getItem() == Items.BOOK_AND_QUILL) {
-                        CraftEventFactory.handleEditBookEvent(player, itemstack); // CraftBukkit
+                        CraftEventFactory.handleEditBookEvent(player, itemstack); // CraftBukkit
                     }
 
                     return;
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 9abf099..da5084a 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -801,7 +801,7 @@ event.disallow(PlayerLoginEvent.Result.KICK_WHITELIST, org.spigotmc.SpigotConfig
         }
 
         /* CraftBukkit start - Remove updating of lag to players -- it spams way to much on big servers.
-        if (this.p < this.players.size()) {
+        if (this.t < this.players.size()) {
             EntityPlayer entityplayer = (EntityPlayer) this.players.get(this.p);
 
             this.sendAll(new PacketPlayOutPlayerInfo(entityplayer.getName(), true, entityplayer.ping));
diff --git a/src/main/java/net/minecraft/server/PlayerSelector.java b/src/main/java/net/minecraft/server/PlayerSelector.java
index e7615d3..2b2d510 100644
--- a/src/main/java/net/minecraft/server/PlayerSelector.java
+++ b/src/main/java/net/minecraft/server/PlayerSelector.java
@@ -1,6 +1,10 @@
 package net.minecraft.server;
 
-import java.util.*;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
diff --git a/src/main/java/net/minecraft/server/StatisticManager.java b/src/main/java/net/minecraft/server/StatisticManager.java
index e86e21b..418ec40 100644
--- a/src/main/java/net/minecraft/server/StatisticManager.java
+++ b/src/main/java/net/minecraft/server/StatisticManager.java
@@ -8,11 +8,10 @@ public class StatisticManager {
 
     protected final Map a = Maps.newConcurrentMap();
 
-    public StatisticManager() {
-    }
+    public StatisticManager() {}
 
     public boolean a(Achievement achievement) {
-        return this.getStatisticValue((Statistic) achievement) > 0;
+        return this.getStatisticValue(achievement) > 0;
     }
 
     public boolean b(Achievement achievement) {
-- 
1.8.5.2.msysgit.0

