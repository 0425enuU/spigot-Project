From a9fcf6615306cf3b3d4b6ae8f49b61484a9f0b4d Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Fri, 20 Feb 2015 21:33:36 +1100
Subject: [PATCH] Use Standard List for EntitySlices.


diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 88bdfc3b7..500564385 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -34,7 +34,7 @@ public class Chunk implements IChunkAccess {
     public final Map<HeightMap.Type, HeightMap> heightMap;
     private final ChunkConverter i;
     public final Map<BlockPosition, TileEntity> tileEntities;
-    public final EntitySlice<Entity>[] entitySlices;
+    public final List<Entity>[] entitySlices; // Spigot
     private final Map<String, StructureStart> l;
     private final Map<String, LongSet> m;
     private final ShortList[] n;
@@ -63,7 +63,7 @@ public class Chunk implements IChunkAccess {
         this.l = Maps.newHashMap();
         this.m = Maps.newHashMap();
         this.n = new ShortList[16];
-        this.entitySlices = (EntitySlice[]) (new EntitySlice[16]);
+        this.entitySlices = (List[]) (new List[16]); // Spigot
         this.world = world;
         this.loc = chunkcoordintpair;
         this.i = chunkconverter;
@@ -79,7 +79,7 @@ public class Chunk implements IChunkAccess {
         }
 
         for (int l = 0; l < this.entitySlices.length; ++l) {
-            this.entitySlices[l] = new EntitySlice<>(Entity.class);
+            this.entitySlices[l] = new org.bukkit.craftbukkit.util.UnsafeList(); // Spigot
         }
 
         this.d = abiomebase;
@@ -604,7 +604,7 @@ public class Chunk implements IChunkAccess {
         j = MathHelper.clamp(j, 0, this.entitySlices.length - 1);
 
         for (int k = i; k <= j; ++k) {
-            Iterator iterator = this.entitySlices[k].a(Entity.class).iterator();
+            Iterator iterator = this.entitySlices[k].iterator(); // Spigot
 
             while (iterator.hasNext()) {
                 Entity entity = (Entity) iterator.next();
@@ -625,12 +625,12 @@ public class Chunk implements IChunkAccess {
         j = MathHelper.clamp(j, 0, this.entitySlices.length - 1);
 
         for (int k = i; k <= j; ++k) {
-            Iterator iterator = this.entitySlices[k].a(oclass).iterator();
+            Iterator iterator = this.entitySlices[k].iterator(); // Spigot
 
             while (iterator.hasNext()) {
                 T t0 = (T) iterator.next(); // CraftBukkit - decompile error
 
-                if (t0.getBoundingBox().c(axisalignedbb) && (predicate == null || predicate.test(t0))) {
+                if (oclass.isInstance(t0) && t0.getBoundingBox().c(axisalignedbb) && (predicate == null || predicate.test(t0))) { // Spigot - instance check
                     list.add(t0);
                 }
             }
@@ -669,7 +669,7 @@ public class Chunk implements IChunkAccess {
         return this.tileEntities;
     }
 
-    public EntitySlice<Entity>[] getEntitySlices() {
+    public List<Entity>[] getEntitySlices() { // Spigot
         return this.entitySlices;
     }
 
diff --git a/src/main/java/net/minecraft/server/PlayerChunkMap.java b/src/main/java/net/minecraft/server/PlayerChunkMap.java
index 1da4a3dcb..e8d71d1b8 100644
--- a/src/main/java/net/minecraft/server/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/PlayerChunkMap.java
@@ -535,11 +535,11 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
                     chunk.setLoaded(true);
                     this.world.a(chunk.getTileEntities().values());
                     List<Entity> list = null;
-                    EntitySlice[] aentityslice = chunk.getEntitySlices();
+                    List<Entity>[] aentityslice = chunk.getEntitySlices(); // Spigot
                     int i = aentityslice.length;
 
                     for (int j = 0; j < i; ++j) {
-                        EntitySlice<Entity> entityslice = aentityslice[j];
+                        List<Entity> entityslice = aentityslice[j]; // Spigot
                         Iterator iterator = entityslice.iterator();
 
                         while (iterator.hasNext()) {
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index bd6b2b509..95eb36d15 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -977,11 +977,11 @@ public class WorldServer extends World {
         }
         // Spigot End
         this.tileEntityListUnload.addAll(chunk.getTileEntities().values());
-        EntitySlice[] aentityslice = chunk.getEntitySlices();
+        List[] aentityslice = chunk.getEntitySlices(); // Spigot
         int i = aentityslice.length;
 
         for (int j = 0; j < i; ++j) {
-            EntitySlice<Entity> entityslice = aentityslice[j];
+            List<Entity> entityslice = aentityslice[j]; // Spigot
             Iterator iterator = entityslice.iterator();
 
             while (iterator.hasNext()) {
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index d0b6c9b73..4c947a935 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -1,6 +1,7 @@
 package org.spigotmc;
 
 import java.util.Collection;
+import java.util.List;
 import net.minecraft.server.AxisAlignedBB;
 import net.minecraft.server.Chunk;
 import net.minecraft.server.Entity;
@@ -157,7 +158,7 @@ public class ActivationRange
      */
     private static void activateChunkEntities(Chunk chunk)
     {
-        for ( EntitySlice slice : chunk.entitySlices )
+        for ( List<Entity> slice : chunk.entitySlices )
         {
             for ( Entity entity : (Collection<Entity>) slice )
             {
-- 
2.20.1

